openapi: 3.0.3
info:
  title: Iris API
  version: 2.0.0
  description: 'A RESTful API for exploring the famous Iris flower dataset. 
  This dataset contains 150 samples of iris flowers with measurements of sepal length, sepal width, petal length, and petal width for three species: setosa, versicolor, and virginica'

servers:
  - url: http://localhost:5000
    description: Local development server

tags:
  - name: Irises
    description: Operations for individual iris flower records
  - name: Species
    description: Operations related to iris species
  - name: Statistics
    description: Statistical analysis and dataset insights

paths:
  /irises:
    get:
      tags: [Irises]
      summary: Query Iris records
      description: Retrieve Iris records filtered by exact values or numeric ranges.
      parameters:
        - name: species_name
          in: query
          description: Filter by iris species
          schema: 
            type: string
        - name: sort_by
          in: query
          schema:
            type: string
            enum: [sepal_length, sepal_width, petal_length, petal_width, sepal_area, petal_area, sepal_to_petal_area_ratio, sepal_to_petal_length_ratio, sepal_to_petal_width_ratio, species]
        - name: sort_order
          in: query
          schema:
            type: string
            enum: [asc, desc]
        - name: limit
          in: query
          schema: 
            type: integer
        # Range filters (min_/max_)
        - name: min_sepal_length
          in: query
          schema: 
            type: number
            format: float
        - name: max_sepal_length
          in: query
          schema: 
          type: number
          format: float
        - name: min_petal_length
          in: query
          schema: 
            type: number
            format: float
        - name: max_petal_length
          in: query
          schema: 
            type: number 
            format: float
        - name: min_sepal_width
          in: query
          schema:
            type: number
            format: float
        - name: max_sepal_width
          in: query
          schema: 
            type: number
            format: float
        - name: min_petal_width
          in: query
          schema: 
            type: number
            format: float
        - name: max_petal_width
          in: query
          schema: 
            type: number
            format: float
      responses:
        '200':
          description: List of iris records
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/Iris'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      tags: [Irises]
      summary: Add a new iris record
      description: Create a new iris entry. If the species does not exist, it will be created.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IrisInput'
            example:
              sepal_length: 5.1
              sepal_width: 3.5
              petal_length: 1.4
              petal_width: 0.2
              species_name: setosa
      responses:
        '201':
          description: Successfully created iris record
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Iris'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /irises/{iris_id}:
    get:
      tags: [Irises]
      summary: Get iris by ID
      parameters:
        - name: iris_id
          in: path
          required: true
          schema: 
            type: integer
      responses:
        '200':
          description: Found iris
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Iris'
        '404':
          description: Iris not found
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Error'

    put:
      tags: [Irises]
      summary: Update iris by ID
      parameters:
        - name: iris_id
          in: path
          required: true
          schema: { type: integer }
      requestBody:
        required: true
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/IrisInput'
            example:
              sepal_length: 2
              sepal_width: 4
              petal_length: 1.5
              petal_width: 0.5
              species_name: setosa
      responses:
        '200':
          description: Updated iris
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Iris'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Iris not found
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Error'

    delete:
      tags: [Irises]
      summary: Delete iris by ID
      parameters:
        - name: iris_id
          in: path
          required: true
          schema: 
            type: integer
      responses:
        '200':
          description: Deleted iris
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: { type: string }
                  message: { type: string }
        '404':
          description: Iris not found
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Error'

  /species:
    get:
      tags: [Species]
      summary: List species
      responses:
        '200':
          description: Species list
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/Species'

  /species/{species_name}/summary:
    get:
      tags: [Species]
      summary: Get summary for species
      parameters:
        - name: species_name
          in: path
          required: true
          schema: 
            type: string
      responses:
        '200':
          description: Measurement summary for species
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/StatisticsResponse'

  /statistics:
    get:
      tags: [Statistics]
      summary: Dataset-wide statistics
      responses:
        '200':
          description: Statistics overview
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/StatisticsResponse'

  /statistics/quantile:
    get:
      tags: [Statistics]
      summary: Quantile for measurement
      parameters:
        - name: measurement
          in: query
          required: true
          schema:
            type: string
            enum: [sepal_length, sepal_width, petal_length, petal_width, sepal_area, petal_area, sepal_to_petal_area_ratio, sepal_to_petal_length_ratio, sepal_to_petal_width_ratio]
        - name: quantile
          in: query
          required: true
          schema: 
            type: number
            minimum: 0
            maximum: 1
          example: 0.25
        - name: species_name
          in: query
          schema: 
            type: string
      responses:
        '200':
          description: Quantile value
          content:
            application/json:
              schema:
                type: object
                properties:
                  measurement: 
                    type: string
                  quantile: 
                    type: number
                  species_name: 
                    type: string
                    nullable: true
                  value: 
                    type: number
        '400':
          description: Invalid parameters
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Error'
        '404':
          description: No data found
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Species:
      type: object
      properties:
        id: 
          type: integer
        name: 
          type: string

    Iris:
      type: object
      properties:
        id: 
          type: integer
        sepal_length: 
          type: number
          format: float
        sepal_width: 
          type: number
          format: float
        petal_length: 
          type: number
          format: float
        petal_width:
          type: number
          format: float 
        sepal_area: 
          type: number
          format: float 
        petal_area: 
          type: number
          format: float
        sepal_to_petal_area_ratio: 
          type: number
          format: float
          nullable: true 
        sepal_to_petal_length_ratio:
          type: number
          format: float
          nullable: true
        sepal_to_petal_width_ratio:
          type: number
          format: float
          nullable: true
        species_name: 
          type: string

    IrisInput:
      type: object
      required: [sepal_length, sepal_width, petal_length, petal_width, species]
      properties:
        sepal_length:
          type: number
          format: float
        sepal_width: 
          type: number
          format: float
        petal_length: 
          type: number
          format: float
        petal_width: 
          type: number
          format: float
        species_name: 
          type: string

    StatisticsResponse:
      type: object
      properties:
        total_records:
          type: integer
        species_distribution:
          type: object
          additionalProperties:
            type: integer
        measurements:
          type: object
          additionalProperties: 
            $ref: '#/components/schemas/MeasurementStats'

    MeasurementStats:
      type: object
      properties:
        mean: 
          type: number
          format: float
        min: 
          type: number
          format: float
        max: 
          type: number
          format: float
        std:
          type: number
          format: float
        median: 
          type: number
          format: float
          nullable: true

    Error:
      type: object
      properties:
        error: 
          type: string
